{
  "$FF81": {
    "name": "CINT",
    "size": 3,
    "description": "Ekranı başlat (Screen Initialize). Cursor pozisyonunu sıfırlar, ekranı temizler ve temel ekran modunu ayarlar.",
    "usage": "KERNAL, ekran başlatma",
    "detailed_info": "Cursor (0,0) pozisyonuna koyar, screen memory'yi $20 (boşluk) ile doldurur, color memory'yi varsayılan renkle doldurur. VIC-II registerlarını varsayılan değerlere ayarlar.",
    "parameters": "Yok",
    "returns": "Yok",
    "registers_affected": "A, X, Y",
    "example": "JSR $FF81 ; ekranı başlat"
  },
  "$FF84": {
    "name": "IOINIT", 
    "size": 3,
    "description": "I/O cihazlarını başlat (I/O Initialize). Tüm I/O chiplerini ve portlarını varsayılan duruma getirir.",
    "usage": "KERNAL, I/O başlatma",
    "detailed_info": "VIC-II, SID, CIA-1, CIA-2 chiplerini başlatır. Seri port, paralel port, kaset ve disk sürücü ayarlarını yapar. IRQ ve NMI vektörlerini ayarlar.",
    "parameters": "Yok",
    "returns": "Yok", 
    "registers_affected": "A, X, Y",
    "example": "JSR $FF84 ; I/O'yu başlat"
  },
  "$FF87": {
    "name": "RAMTAS",
    "size": 3,
    "description": "RAM test ve başlatma (RAM Test and Set). Bellek testlerini yapar ve zero page değişkenlerini başlatır.",
    "usage": "KERNAL, bellek başlatma",
    "detailed_info": "Zero page değişkenlerini temizler, BASIC workspace'ini ayarlar, system pointers'ları başlatır. Bellek sınırlarını tespit eder ve MEMTOP'u ayarlar.",
    "parameters": "Yok",
    "returns": "Yok",
    "registers_affected": "A, X, Y",
    "example": "JSR $FF87 ; RAM'i başlat"
  },
  "$FF8A": {
    "name": "RESTOR",
    "size": 3,
    "description": "I/O vektörlerini restore et (Restore I/O Vectors). KERNAL I/O vektörlerini varsayılan değerlere geri döndürür.", 
    "usage": "KERNAL, vektör restore",
    "detailed_info": "IRQ, NMI, OPEN, CLOSE, CHKIN, CHKOUT, CLRCHN, BASIN, BSOUT vektörlerini KERNAL ROM'daki varsayılan adreslerine geri döndürür.",
    "parameters": "Yok",
    "returns": "Yok",
    "registers_affected": "A, X, Y",
    "example": "JSR $FF8A ; vektörleri restore et"
  },
  "$FF8D": {
    "name": "VECTOR",
    "size": 3,
    "description": "I/O vektörlerini kopyala (Copy I/O Vectors). RAM'deki I/O vektörlerini belirtilen adrese kopyalar.",
    "usage": "KERNAL, vektör kopyalama",
    "detailed_info": "X/Y registerlarında belirtilen adrese I/O vektörlerini kopyalar. Bu sayede vektörleri yedekleyip daha sonra geri yükleyebilirsiniz.",
    "parameters": "X/Y: Hedef adres (low/high byte)",
    "returns": "Yok",
    "registers_affected": "A",
    "example": "LDX #<buffer : LDY #>buffer : JSR $FF8D ; vektörleri buffer'a kopyala"
  },
  "$FF90": {
    "name": "SETMSG",
    "size": 3,
    "description": "Hata mesajlarını kontrol et (Set Message Control). KERNAL hata mesajlarının gösterilip gösterilmeyeceğini ayarlar.",
    "usage": "KERNAL, mesaj kontrolü", 
    "detailed_info": "A registerındaki değer: Bit 6 = hata mesajları kontrolü, Bit 7 = SEARCH mesajları kontrolü. 1 = göster, 0 = gizle.",
    "parameters": "A: Mesaj kontrol biti (bit 6: hata, bit 7: search)",
    "returns": "Yok",
    "registers_affected": "Yok",
    "example": "LDA #$00 : JSR $FF90 ; hata mesajlarını kapat"
  },
  "$FF93": {
    "name": "SECOND",
    "size": 3,
    "description": "Secondary address gönder (Send Secondary Address). Belirtilen device'a secondary address gönderir.",
    "usage": "KERNAL, seri iletişim",
    "detailed_info": "Daha önce LISTEN ile seçilen device'a secondary address gönderir. Disk sürücü komutları ve kanal seçimi için kullanılır.",
    "parameters": "A: Secondary address (0-31)",
    "returns": "Yok", 
    "registers_affected": "Yok",
    "example": "LDA #$0F : JSR $FF93 ; secondary address 15 gönder"
  },
  "$FF96": {
    "name": "TKSA",
    "size": 3,
    "description": "Talk secondary address gönder (Send Talk Secondary Address). TALK modundaki device'a secondary address gönderir.",
    "usage": "KERNAL, seri iletişim",
    "detailed_info": "Daha önce TALK komutu ile seçilen device'a secondary address gönderir. Veri okuma kanalını belirtmek için kullanılır.",
    "parameters": "A: Secondary address (0-31)",
    "returns": "Yok",
    "registers_affected": "Yok", 
    "example": "LDA #$00 : JSR $FF96 ; talk secondary address 0"
  },
  "$FF99": {
    "name": "MEMTOP",
    "size": 3,
    "description": "Bellek sınırlarını ayarla (Set/Read Memory Top). BASIC'in kullanabileceği en yüksek bellek adresini ayarlar veya okur.",
    "usage": "KERNAL, bellek yönetimi",
    "detailed_info": "Carry set ise: X/Y'deki adresi memory top olarak ayarlar. Carry clear ise: Mevcut memory top'u X/Y'ye döndürür.",
    "parameters": "Carry: 1=ayarla, 0=oku. X/Y: Adres (set modunda)",
    "returns": "X/Y: Memory top adresi (read modunda)",
    "registers_affected": "X, Y (read modunda)",
    "example": "CLC : JSR $FF99 ; memory top'u oku"
  },
  "$FF9C": {
    "name": "MEMBOT",
    "size": 3,
    "description": "Bellek alt sınırını ayarla (Set/Read Memory Bottom). BASIC'in kullanabileceği en düşük bellek adresini ayarlar veya okur.",
    "usage": "KERNAL, bellek yönetimi", 
    "detailed_info": "Carry set ise: X/Y'deki adresi memory bottom olarak ayarlar. Carry clear ise: Mevcut memory bottom'u X/Y'ye döndürür.",
    "parameters": "Carry: 1=ayarla, 0=oku. X/Y: Adres (set modunda)",
    "returns": "X/Y: Memory bottom adresi (read modunda)",
    "registers_affected": "X, Y (read modunda)",
    "example": "SEC : LDX #$00 : LDY #$08 : JSR $FF9C ; memory bottom'u $0800 yap"
  },
  "$FF9F": {
    "name": "SCNKEY",
    "size": 3,
    "description": "Klavyeyi tara (Scan Keyboard). Klavye matrisini tarar ve basılan tuşları buffer'a koyar.",
    "usage": "KERNAL, klavye tarama",
    "detailed_info": "Klavye matrisini tarar, SHIFT, CTRL, Commodore tuşlarının durumunu kontrol eder. Basılan tuşları keyboard buffer'ına ekler. Cursor blink kontrolü yapar.",
    "parameters": "Yok",
    "returns": "Yok",
    "registers_affected": "A, X, Y",
    "example": "JSR $FF9F ; klavyeyi tara"
  },
  "$FFA2": {
    "name": "SETTMO",
    "size": 3,
    "description": "Timeout ayarla (Set Timeout). Seri bus timeout değerini ayarlar.",
    "usage": "KERNAL, seri bus",
    "detailed_info": "A registerındaki değeri seri bus timeout olarak ayarlar. 0 = timeout yok, 1-255 = timeout değeri. Disk sürücü iletişimi için kullanılır.",
    "parameters": "A: Timeout değeri (0=yok, 1-255=timeout)",
    "returns": "Yok",
    "registers_affected": "Yok",
    "example": "LDA #$80 : JSR $FFA2 ; timeout'u $80 yap"
  },
  "$FFA5": {
    "name": "ACPTR",
    "size": 3,
    "description": "Seri bus'tan byte al (Accept Byte from Serial Bus). Seri bus'tan bir byte okur.",
    "usage": "KERNAL, seri iletişim",
    "detailed_info": "Daha önce TALK komutu ile seçilen device'tan bir byte okur. EOI (End of Indicator) durumunu kontrol eder.",
    "parameters": "Yok",
    "returns": "A: Okunan byte",
    "registers_affected": "A",
    "example": "JSR $FFA5 ; seri bus'tan byte oku"
  },
  "$FFA8": {
    "name": "CIOUT",
    "size": 3,
    "description": "Seri bus'a byte gönder (Output Byte to Serial Bus). Seri bus'a bir byte gönderir.",
    "usage": "KERNAL, seri iletişim",
    "detailed_info": "A registerındaki byte'ı daha önce LISTEN komutu ile seçilen device'a gönderir.",
    "parameters": "A: Gönderilecek byte",
    "returns": "Yok",
    "registers_affected": "Yok",
    "example": "LDA #'M' : JSR $FFA8 ; 'M' karakterini gönder"
  },
  "$FFAB": {
    "name": "UNTLK",
    "size": 3,
    "description": "Untalk komutu gönder (Send Untalk Command). Tüm device'ların TALK modundan çıkmasını sağlar.",
    "usage": "KERNAL, seri iletişim",
    "detailed_info": "Seri bus'a UNTALK komutu gönderir. Bu komut tüm device'ların talk modundan çıkmasını sağlar.",
    "parameters": "Yok",
    "returns": "Yok",
    "registers_affected": "Yok",
    "example": "JSR $FFAB ; untalk komutu gönder"
  },
  "$FFAE": {
    "name": "UNLSN",
    "size": 3,
    "description": "Unlisten komutu gönder (Send Unlisten Command). Tüm device'ların LISTEN modundan çıkmasını sağlar.",
    "usage": "KERNAL, seri iletişim", 
    "detailed_info": "Seri bus'a UNLISTEN komutu gönderir. Bu komut tüm device'ların listen modundan çıkmasını sağlar.",
    "parameters": "Yok",
    "returns": "Yok",
    "registers_affected": "Yok",
    "example": "JSR $FFAE ; unlisten komutu gönder"
  },
  "$FFB1": {
    "name": "LISTEN",
    "size": 3,
    "description": "Device'ı listen moduna al (Command Device to Listen). Belirtilen device'ı listen moduna geçirir.",
    "usage": "KERNAL, seri iletişim",
    "detailed_info": "A registerındaki device numarasını listen moduna geçirir. Device artık seri bus'tan gelen verileri kabul etmeye hazır olur.",
    "parameters": "A: Device numarası (4-31)",
    "returns": "Yok",
    "registers_affected": "Yok",
    "example": "LDA #$08 : JSR $FFB1 ; device 8'i listen moduna al"
  },
  "$FFB4": {
    "name": "TALK",
    "size": 3,
    "description": "Device'ı talk moduna al (Command Device to Talk). Belirtilen device'ı talk moduna geçirir.",
    "usage": "KERNAL, seri iletişim",
    "detailed_info": "A registerındaki device numarasını talk moduna geçirir. Device artık seri bus'a veri göndermeye hazır olur.",
    "parameters": "A: Device numarası (4-31)",
    "returns": "Yok",
    "registers_affected": "Yok",
    "example": "LDA #$08 : JSR $FFB4 ; device 8'i talk moduna al"
  },
  "$FFB7": {
    "name": "READST",
    "size": 3,
    "description": "I/O status oku (Read I/O Status). Son I/O operasyonunun durumunu okur.",
    "usage": "KERNAL, durum kontrolü",
    "detailed_info": "STATUS register ($90) içeriğini A'ya kopyalar. Bit anlamları: Bit 0=timeout, Bit 1=read error, Bit 6=EOF, Bit 7=device not present.",
    "parameters": "Yok",
    "returns": "A: Status değeri",
    "registers_affected": "A",
    "example": "JSR $FFB7 ; I/O status'unu oku"
  },
  "$FFBA": {
    "name": "SETLFS",
    "size": 3,
    "description": "Logical file setup (Set Logical File Parameters). Logical file parametrelerini ayarlar.",
    "usage": "KERNAL, dosya yönetimi",
    "detailed_info": "A: logical file numarası (1-255), X: device numarası (1-31), Y: secondary address (0-255). Bu parametreler OPEN komutunda kullanılır.",
    "parameters": "A: Logical file no, X: Device no, Y: Secondary address",
    "returns": "Yok",
    "registers_affected": "Yok",
    "example": "LDA #$01 : LDX #$08 : LDY #$00 : JSR $FFBA ; LF=1, dev=8, SA=0"
  },
  "$FFBD": {
    "name": "SETNAM",
    "size": 3,
    "description": "Dosya adını ayarla (Set File Name). OPEN komutu için dosya adını ayarlar.",
    "usage": "KERNAL, dosya yönetimi",
    "detailed_info": "A: dosya adı uzunluğu, X/Y: dosya adı string'inin adresi (low/high byte). Bu parametreler OPEN komutunda kullanılır.",
    "parameters": "A: Dosya adı uzunluğu, X/Y: Dosya adı adresi",
    "returns": "Yok", 
    "registers_affected": "Yok",
    "example": "LDA #$03 : LDX #<name : LDY #>name : JSR $FFBD ; dosya adını ayarla"
  },
  "$FFC0": {
    "name": "OPEN",
    "size": 3,
    "description": "Dosya aç (Open File). SETLFS ve SETNAM ile ayarlanan parametrelerle dosya açar.",
    "usage": "KERNAL, dosya yönetimi",
    "detailed_info": "Daha önce SETLFS ve SETNAM ile ayarlanan parametrelerle logical file açar. Carry set ise hata var.",
    "parameters": "Önceden SETLFS ve SETNAM ile ayarlanmış",
    "returns": "Carry: 0=başarılı, 1=hata",
    "registers_affected": "A, X, Y",
    "example": "JSR $FFC0 ; dosyayı aç"
  },
  "$FFC3": {
    "name": "CLOSE",
    "size": 3,
    "description": "Dosya kapat (Close File). Belirtilen logical file'ı kapatır.",
    "usage": "KERNAL, dosya yönetimi",
    "detailed_info": "A registerındaki logical file numarasını kapatır ve ilgili buffer'ları temizler.",
    "parameters": "A: Logical file numarası",
    "returns": "Yok",
    "registers_affected": "A, X, Y",
    "example": "LDA #$01 : JSR $FFC3 ; logical file 1'i kapat"
  },
  "$FFC6": {
    "name": "CHKIN",
    "size": 3,
    "description": "Input channel ayarla (Set Input Channel). BASIN için input channel'ı belirler.",
    "usage": "KERNAL, I/O yönlendirme",
    "detailed_info": "A registerındaki logical file numarasını input channel olarak ayarlar. Bundan sonra BASIN o channel'dan okur.",
    "parameters": "A: Logical file numarası (0=klavye)",
    "returns": "Carry: 0=başarılı, 1=hata",
    "registers_affected": "Yok",
    "example": "LDA #$02 : JSR $FFC6 ; input channel'ı LF 2 yap"
  },
  "$FFC9": {
    "name": "CHKOUT",
    "size": 3,
    "description": "Output channel ayarla (Set Output Channel). BSOUT için output channel'ı belirler.",
    "usage": "KERNAL, I/O yönlendirme",
    "detailed_info": "A registerındaki logical file numarasını output channel olarak ayarlar. Bundan sonra BSOUT o channel'a yazar.",
    "parameters": "A: Logical file numarası (3=ekran)",
    "returns": "Carry: 0=başarılı, 1=hata",
    "registers_affected": "Yok",
    "example": "LDA #$04 : JSR $FFC9 ; output channel'ı LF 4 yap"
  },
  "$FFCC": {
    "name": "CLRCHN",
    "size": 3,
    "description": "I/O channel'ları temizle (Clear I/O Channels). Input ve output channel'ları varsayılana döndürür.",
    "usage": "KERNAL, I/O yönlendirme",
    "detailed_info": "Input channel'ı klavyeye (0), output channel'ı ekrana (3) döndürür. Tüm açık logical file'lar açık kalır.",
    "parameters": "Yok",
    "returns": "Yok",
    "registers_affected": "A, X",
    "example": "JSR $FFCC ; I/O channel'ları temizle"
  },
  "$FFCF": {
    "name": "BASIN",
    "size": 3,
    "description": "Karakter girişi (Input Character). Mevcut input channel'dan bir karakter okur.",
    "usage": "KERNAL, karakter I/O",
    "detailed_info": "CHKIN ile ayarlanan channel'dan bir karakter okur. Varsayılan klavyeden okur. EOF durumunda A=$00 döner.",
    "parameters": "Yok",
    "returns": "A: Okunan karakter",
    "registers_affected": "A",
    "example": "JSR $FFCF ; karakter oku"
  },
  "$FFD2": {
    "name": "BSOUT",
    "size": 3,
    "description": "Karakter çıkışı (Output Character). Mevcut output channel'a bir karakter yazar.",
    "usage": "KERNAL, karakter I/O",
    "detailed_info": "CHKOUT ile ayarlanan channel'a A registerındaki karakteri yazar. Varsayılan ekrana yazar. Özel karakter kodları: $0D=CR, $93=CLR.",
    "parameters": "A: Yazılacak karakter",
    "returns": "Yok",
    "registers_affected": "Yok", 
    "example": "LDA #'A' : JSR $FFD2 ; 'A' karakterini yazdır"
  },
  "$FFD5": {
    "name": "LOAD",
    "size": 3,
    "description": "Bellek yükle (Load Memory). Belirtilen device'tan belleğe program yükler.",
    "usage": "KERNAL, program yükleme",
    "detailed_info": "A=0: LOAD, A=1: VERIFY. X/Y: yükleme adresi (A=0 ise ignore). SETLFS ve SETNAM önceden ayarlanmış olmalı.",
    "parameters": "A: 0=load, 1=verify. X/Y: Yükleme adresi",
    "returns": "Carry: 0=başarılı, 1=hata. X/Y: Son adres+1",
    "registers_affected": "A, X, Y",
    "example": "LDA #$00 : LDX #$00 : LDY #$08 : JSR $FFD5 ; $0800'e yükle"
  },
  "$FFD8": {
    "name": "SAVE",
    "size": 3,
    "description": "Bellek kaydet (Save Memory). Belirtilen bellek alanını device'a kaydeder.",
    "usage": "KERNAL, program kaydetme", 
    "detailed_info": "A: zero page adresi (başlangıç adresi pointer'ı). X/Y: son adres+1. SETLFS ve SETNAM önceden ayarlanmış olmalı.",
    "parameters": "A: ZP pointer to start address, X/Y: End address+1",
    "returns": "Carry: 0=başarılı, 1=hata",
    "registers_affected": "A, X, Y",
    "example": "LDA #$FB : LDX #$00 : LDY #$10 : JSR $FFD8 ; $FB pointer'dan $1000'e kadar kaydet"
  },
  "$FFDB": {
    "name": "SETTIM",
    "size": 3,
    "description": "Sistem saatini ayarla (Set System Clock). 24-bit sistem saatini ayarlar.",
    "usage": "KERNAL, zaman yönetimi",
    "detailed_info": "A/X/Y registerlarındaki değeri sistem saatine ($A0-$A2) yazar. Saat 1/60 saniye (jiffy) birimindedir.",
    "parameters": "A: Düşük byte, X: Orta byte, Y: Yüksek byte",
    "returns": "Yok",
    "registers_affected": "Yok",
    "example": "LDA #$00 : LDX #$00 : LDY #$00 : JSR $FFDB ; saati sıfırla"
  },
  "$FFDE": {
    "name": "RDTIM",
    "size": 3,
    "description": "Sistem saatini oku (Read System Clock). 24-bit sistem saatini okur.",
    "usage": "KERNAL, zaman yönetimi",
    "detailed_info": "Sistem saatini ($A0-$A2) A/X/Y registerlarına kopyalar. Saat 1/60 saniye (jiffy) birimindedir.",
    "parameters": "Yok",
    "returns": "A: Düşük byte, X: Orta byte, Y: Yüksek byte",
    "registers_affected": "A, X, Y",
    "example": "JSR $FFDE ; sistem saatini oku"
  },
  "$FFE1": {
    "name": "STOP",
    "size": 3,
    "description": "STOP tuşunu kontrol et (Test Stop Key). STOP tuşunun basıp basılmadığını kontrol eder.",
    "usage": "KERNAL, tuş kontrolü",
    "detailed_info": "STOP tuşunun durumunu kontrol eder. RUN/STOP tuşu basılı ise Z flag set edilir.",
    "parameters": "Yok",
    "returns": "Z flag: 1=STOP basılı, 0=basılı değil",
    "registers_affected": "A, X",
    "example": "JSR $FFE1 : BEQ stop_pressed ; STOP tuşunu kontrol et"
  },
  "$FFE4": {
    "name": "GETIN",
    "size": 3,
    "description": "Karakter al (Get Character). Klavye buffer'ından karakter alır, bekleme yapmaz.",
    "usage": "KERNAL, karakter girişi",
    "detailed_info": "Klavye buffer'ında karakter varsa alır, yoksa A=$00 döner. BASIN'den farklı olarak bekleme yapmaz.",
    "parameters": "Yok",
    "returns": "A: Karakter veya $00 (buffer boş)",
    "registers_affected": "A, X, Y",
    "example": "JSR $FFE4 ; karakter al (non-blocking)"
  },
  "$FFE7": {
    "name": "CLALL",
    "size": 3,
    "description": "Tüm dosyaları kapat (Close All Files). Tüm açık logical file'ları kapatır.",
    "usage": "KERNAL, dosya yönetimi",
    "detailed_info": "Tüm açık logical file'ları kapatır ve ilgili buffer'ları temizler. I/O channel'ları varsayılana döndürür.",
    "parameters": "Yok",
    "returns": "Yok",
    "registers_affected": "A, X",
    "example": "JSR $FFE7 ; tüm dosyaları kapat"
  },
  "$FFEA": {
    "name": "UDTIM",
    "size": 3,
    "description": "Sistem saatini güncelle (Update System Clock). Sistem saatini bir jiffy artırır.",
    "usage": "KERNAL, zaman yönetimi", 
    "detailed_info": "Sistem saatini ($A0-$A2) bir artırır. IRQ rutini tarafından 1/60 saniyede bir çağrılır.",
    "parameters": "Yok",
    "returns": "Yok",
    "registers_affected": "A, X",
    "example": "JSR $FFEA ; saati güncelle"
  },
  "$FFED": {
    "name": "SCREEN",
    "size": 3,
    "description": "Ekran boyutunu oku (Read Screen Size). Ekran boyutunu karakter cinsinden döndürür.",
    "usage": "KERNAL, ekran bilgisi",
    "detailed_info": "X: ekran genişliği (karakter), Y: ekran yüksekliği (karakter). C64'te genellikle 40x25 döner.",
    "parameters": "Yok",
    "returns": "X: Genişlik (karakter), Y: Yükseklik (karakter)",
    "registers_affected": "X, Y",
    "example": "JSR $FFED ; ekran boyutunu oku"
  },
  "$FFF0": {
    "name": "PLOT",
    "size": 3,
    "description": "Cursor pozisyonunu ayarla/oku (Set/Read Cursor Position). Cursor pozisyonunu ayarlar veya okur.",
    "usage": "KERNAL, cursor kontrolü",
    "detailed_info": "Carry set ise: X/Y'deki pozisyona cursor'u koyar. Carry clear ise: Mevcut cursor pozisyonunu X/Y'ye döndürür.",
    "parameters": "Carry: 1=ayarla, 0=oku. X: Sütun, Y: Satır (set modunda)",
    "returns": "X: Sütun, Y: Satır (read modunda)",
    "registers_affected": "X, Y (read modunda)",
    "example": "SEC : LDX #$10 : LDY #$05 : JSR $FFF0 ; cursor'u (16,5)'e koy"
  },
  "$FFF3": {
    "name": "IOBASE",
    "size": 3,
    "description": "I/O base adresini oku (Read I/O Base Address). I/O alanının başlangıç adresini döndürür.",
    "usage": "KERNAL, sistem bilgisi",
    "detailed_info": "I/O alanının başlangıç adresini X/Y'ye döndürür. C64'te genellikle $D000 döner.",
    "parameters": "Yok",
    "returns": "X/Y: I/O base adresi (low/high byte)",
    "registers_affected": "X, Y",
    "example": "JSR $FFF3 ; I/O base adresini oku"
  }
}
